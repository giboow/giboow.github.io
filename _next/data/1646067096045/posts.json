{"pageProps":{"posts":[{"id":"springboot-contrextualiser-la-serialization","author":"giboow","title":"SpringBoot -  Contextualiser la serialisation","date":"2022-02-28","keywords":["SpringBoot","API","JSON","Jackson","Filter"],"image":"/static/images/post/tyler-nix-WVl1N2C2zEA-unsplash.jpg","contentHtml":"<p>À chaque fois que j’ai développé une API, je me suis confronté au même problème : comment filtrer les données en fonction de mes appels API.</p>\n<p>En effet, certains appels qui sont disponibles par exemple pour appel “utilisateur” ne rendront pas les mêmes données qu’un appel disponible pour un “administrateur”.</p>\n<h1>Le projet</h1>\n<p>Pour commencer, nous allons construire une API REST pour la gestion des véhicules, nous aurons donc un objet “<strong>Vehicle”</strong> qui sera constitué de la façon suivante :</p>\n<ul>\n<li>Id: Long</li>\n<li>brand: String ⇒ La marque, par exemple (Renault)</li>\n<li>model: String ⇒ Le model, par exemple (Megane)</li>\n<li>registrationPlate: String  ⇒ La plaque d’immatriculation de la voiture, par exemple (SP-800-TT)</li>\n<li>Serial number : String ⇒ Le numéro de série du véhicule</li>\n</ul>\n<p>Ces données pourront être lues par n’importe quel utilisateur. Nous définirons en plus des données dont l’utilisateur n’a pas besoin, mais que l’administrateur peut consulter :</p>\n<ul>\n<li>CreatedAt : LocalDatetime ⇒ Date de création de l’objet en base de données</li>\n<li>UpdatedAt : LocalDatetime ⇒ Date de modification de l’objet en base de données</li>\n</ul>\n<p>Pour gagner du temps lors de mes développements, je définis une Class abstraite qui me sert de base a l’ensemble de mes entités :</p>\n<pre><code>@MappedSuperclass\n@Data\n@SuperBuilder\n@NoArgsConstructor\npublic abstract class EntityAbstract {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @CreatedDate\n    @Column(nullable = false, columnDefinition = \"timestamp default now()\")\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone=\"UTC\")\n    LocalDateTime createdAt;\n\n    @LastModifiedDate\n    @Column(nullable = false, columnDefinition = \"timestamp default now()\")\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone=\"UTC\")\n    LocalDateTime updatedAt;\n\n}\n</code></pre>\n<p>Puis je définis ma classe Vehicle :</p>\n<pre><code>@Entity\n@Data\npublic class Vehicle extends EntityAbstract {\n\n    @NotEmpty\n    @Column(nullable = false)\n    String registrationPlate;\n\n    @NotEmpty\n    @Column(nullable = false)\n    String model;\n\n    @NotEmpty\n    @Column(nullable = false)\n    String brand;\n\n\t\t@NotEmpty\n    @Column(nullable = false)\n    String serialNumber;\n}\n</code></pre>\n<p>Enfin nous définirons un Controller qui permettra d’accéder aux données à l’aide d’un service de récupération des données avec une route utilisateur ainsi qu’une route Admin :</p>\n<pre><code>@RestController\npublic class VehicleController {\n    @Autowired\n    private VehicleService vehicleService;\n\n    @GetMapping(\"/vehicle/list\")\n    public List&#x3C;Vehicle> listVehicles() {\n        return vehicleService.listVehicles();\n    }\n\n    @GetMapping(\"/admin/vehicle/list\")\n    public List&#x3C;Vehicle> adminListVehicles() {\n        return vehicleService.listVehicles();\n    }\n}\n</code></pre>\n<p>Pour le moment, le rendu des données est exactement le même, mais nous allons voir par la suite comment “filter” les données.</p>\n<h1>Jackson à la rescousse!</h1>\n<p>Pour filtrer les données, nous allons utiliser une fonctionnalité de la librairie Jackson, les JsonView!</p>\n<p>Nous devons définir une classe contenant des interfaces qui correspondent aux niveau des filtres de notre API :</p>\n<pre><code>/**\n * Json view filter\n */\npublic class JsonViews {\n\t  public interface Create {}\n    public interface Update extends Create{}\n    public interface Summary extends Update{}\n    public interface Admin extends Summary{}\n}\n</code></pre>\n<p>Le niveau “<strong>Create”</strong> correspond aux attributs visibles pour la création d’un objet, “<strong>Update”</strong> étend du filtre précédent et permettra de filtrer uniquement les attributs qui peuvent être mis à jour. <strong>“Summary”,</strong> étend des propriété de <strong>“Create”</strong> et <strong>”Update”.</strong> Enfin “<strong>Admin”</strong> permet de visualiser ou de mettre à jour des attributs uniquement accessibles aux Administrateurs.</p>\n<p>Cette fonctionnalité sert non seulement au rendu d’un JSON, que lorsque l’API consomme le Body d’une requête.</p>\n<p>Nous allons mettre à jour l’entité pour que les attributs soient filtrés correctement par l’API :</p>\n<pre><code>@MappedSuperclass\n@Data\n@SuperBuilder\n@NoArgsConstructor\npublic abstract class EntityAbstract {\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.AUTO)\n    @JsonView(JsonViews.Update.class)\n    private Integer id;\n\n    @CreatedDate\n    @Column(nullable = false, columnDefinition = \"timestamp default CURRENT_TIMESTAMP\")\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone=\"UTC\")\n    @JsonView(JsonViews.Admin.class)\n    LocalDateTime createdAt;\n\n    @LastModifiedDate\n    @Column(nullable = false, columnDefinition = \"timestamp default CURRENT_TIMESTAMP\")\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    @JsonFormat(shape=JsonFormat.Shape.STRING, pattern=\"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone=\"UTC\")\n    @JsonView(JsonViews.Admin.class)\n    LocalDateTime updatedAt;\n\n}\n</code></pre>\n<pre><code>@Entity\n@Data\npublic class Vehicle extends EntityAbstract {\n\n    @NotEmpty\n    @Column(nullable = false)\n    @JsonView(JsonViews.Create.class)\n    String registrationPlate;\n\n    @NotEmpty\n    @Column(nullable = false)\n    @JsonView(JsonViews.Create.class)\n    String model;\n\n    @NotEmpty\n    @Column(nullable = false)\n    @JsonView(JsonViews.Create.class)\n    String brand;\n\n    @NotEmpty\n    @Column(nullable = false)\n    @JsonView(JsonViews.Create.class)\n    String serialNumber;\n}\n</code></pre>\n<p>Enfin nous pouvons l’utiliser dans le controller :</p>\n<pre><code>@RestController\npublic class VehicleController {\n    @Autowired\n    private VehicleService vehicleService;\n\n\t\t/**\n     * List véhicles\n     */\n    @GetMapping(\"/vehicle/list\")\n    @JsonView(JsonViews.Summary.class)\n    public List&#x3C;Vehicle> listVehicles() {\n        return vehicleService.listVehicles();\n    }\n\n\t\t/**\n     * List vehicles (Admin)\n     */\n    @GetMapping(\"/admin/vehicle/list\")\n    @JsonView(JsonViews.Summary.class)\n    public List&#x3C;Vehicle> adminListVehicles() {\n        return vehicleService.listVehicles();\n    }\n\n\t\t/**\n     * Create vehicle (Admin)\n     */\n    @PostMapping(\"/admin/vehicle\")\n    @JsonView(JsonViews.Admin.class)\n    public Vehicle postAdminVehicle(@JsonView(JsonViews.Create.class) Vehicle vehicle) {\n        return vehicleService.createVehicle(vehicle);\n    }\n\n\t\t/**\n     * Update vehicle (Admin)\n     */\n    @PutMapping(\"/admin/vehicle\")\n    @JsonView(JsonViews.Admin.class)\n    public Vehicle putAdminVehicle(@JsonView(JsonViews.Update.class) Vehicle vehicle) {\n        return vehicleService.updateVehicle(vehicle);\n    }\n\n}\n</code></pre>\n<h1>Résultat</h1>\n<h2>Liste des véhicules (Vue utilisateur)</h2>\n<pre><code>~ curl http://localhost:8080/vehicle/list\n[{\"id\":1,\"registrationPlate\":\"AA-205-AA\",\"model\":\"205\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"3KX9YLH2K980HNYYS1YZ\"},{\"id\":2,\"registrationPlate\":\"AA-206-AA\",\"model\":\"206\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"VST52ASAH145TIZGJ3LC\"},{\"id\":3,\"registrationPlate\":\"AA-207-AA\",\"model\":\"207\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"JI0BNW8D1HYGPFAECEPJ\"},{\"id\":4,\"registrationPlate\":\"AA-208-AA\",\"model\":\"208\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"LN97FF02UWRJYRAEGFL5\"},{\"id\":5,\"registrationPlate\":\"AA-106-AA\",\"model\":\"106\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"R94DJ8P5PT7M6PB5DP5B\"},{\"id\":6,\"registrationPlate\":\"AA-107-AA\",\"model\":\"107\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"OJHHEW2SP2KJDU3CZLFO\"},{\"id\":7,\"registrationPlate\":\"AA-108-AA\",\"model\":\"108\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"49LUMOTWMOQSNHK09MR3\"},{\"id\":8,\"registrationPlate\":\"AA-306-AA\",\"model\":\"306\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"0KBBBHVTZN9P66I8TVGT\"},{\"id\":9,\"registrationPlate\":\"AA-307-AA\",\"model\":\"307\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"TK0GX92MY29AR0H9ZYIB\"},{\"id\":10,\"registrationPlate\":\"AA-308-AA\",\"model\":\"308\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"EKNPA002KCQXYAUX04AV\"},{\"id\":11,\"registrationPlate\":\"AA-309-AA\",\"model\":\"309\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"D1788D08RU0AU3O5BVXR\"},{\"id\":12,\"registrationPlate\":\"AA-405-AA\",\"model\":\"405\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"PHU0M7NKZ799D64VBVJ8\"},{\"id\":13,\"registrationPlate\":\"AA-406-AA\",\"model\":\"406\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"NAD3F2ULL5TY4QCECLAO\"},{\"id\":14,\"registrationPlate\":\"AA-407-AA\",\"model\":\"407\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"C842THXCOBFFZ0O5U0YK\"},{\"id\":15,\"registrationPlate\":\"AA-508-AA\",\"model\":\"508\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"F0T2ELSQ0VPRF1NBY8XH\"},{\"id\":16,\"registrationPlate\":\"AA-407-AA\",\"model\":\"407\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"WEBVP95ON3HDX0TGPFXB\"},{\"id\":17,\"registrationPlate\":\"AA-508-AA\",\"model\":\"508\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"TEZ3D70UDBY8UKHRKSYY\"},{\"id\":18,\"registrationPlate\":\"AA-605-AA\",\"model\":\"605\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"WIGYNFTWH0Q6E85Z2HA2\"},{\"id\":19,\"registrationPlate\":\"AA-607-AA\",\"model\":\"607\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"OLI3JCTF82WUQK14Z295\"}]\n</code></pre>\n<h2>Liste des Véhicules (Vue Admin)</h2>\n<pre><code>~ curl http://localhost:8080/admin/vehicle/list\n[{\"id\":1,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-205-AA\",\"model\":\"205\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"3KX9YLH2K980HNYYS1YZ\"},{\"id\":2,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-206-AA\",\"model\":\"206\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"VST52ASAH145TIZGJ3LC\"},{\"id\":3,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-207-AA\",\"model\":\"207\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"JI0BNW8D1HYGPFAECEPJ\"},{\"id\":4,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-208-AA\",\"model\":\"208\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"LN97FF02UWRJYRAEGFL5\"},{\"id\":5,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-106-AA\",\"model\":\"106\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"R94DJ8P5PT7M6PB5DP5B\"},{\"id\":6,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-107-AA\",\"model\":\"107\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"OJHHEW2SP2KJDU3CZLFO\"},{\"id\":7,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-108-AA\",\"model\":\"108\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"49LUMOTWMOQSNHK09MR3\"},{\"id\":8,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-306-AA\",\"model\":\"306\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"0KBBBHVTZN9P66I8TVGT\"},{\"id\":9,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-307-AA\",\"model\":\"307\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"TK0GX92MY29AR0H9ZYIB\"},{\"id\":10,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-308-AA\",\"model\":\"308\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"EKNPA002KCQXYAUX04AV\"},{\"id\":11,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-309-AA\",\"model\":\"309\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"D1788D08RU0AU3O5BVXR\"},{\"id\":12,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-405-AA\",\"model\":\"405\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"PHU0M7NKZ799D64VBVJ8\"},{\"id\":13,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-406-AA\",\"model\":\"406\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"NAD3F2ULL5TY4QCECLAO\"},{\"id\":14,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-407-AA\",\"model\":\"407\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"C842THXCOBFFZ0O5U0YK\"},{\"id\":15,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-508-AA\",\"model\":\"508\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"F0T2ELSQ0VPRF1NBY8XH\"},{\"id\":16,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-407-AA\",\"model\":\"407\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"WEBVP95ON3HDX0TGPFXB\"},{\"id\":17,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-508-AA\",\"model\":\"508\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"TEZ3D70UDBY8UKHRKSYY\"},{\"id\":18,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-605-AA\",\"model\":\"605\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"WIGYNFTWH0Q6E85Z2HA2\"},{\"id\":19,\"createdAt\":\"2022-02-28T14:32:13Z\",\"updatedAt\":\"2022-02-28T14:32:13Z\",\"registrationPlate\":\"AA-607-AA\",\"model\":\"607\",\"brand\":\"PEUGEOT\",\"serialNumber\":\"OLI3JCTF82WUQK14Z295\"}]\n</code></pre>\n<h2>Création de véhicule</h2>\n<pre><code>~ curl --location --request POST 'localhost:8080/admin/vehicle' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"brand\": \"VolksWagen\",\n    \"model\": \"Golf\",\n    \"serialNumber\": \"VWVWVWVWVWVWVW\",\n    \"registrationPlate\": \"GO-123-LF\"\n}'\n{\"id\":20,\"createdAt\":\"2022-02-28T15:34:03Z\",\"updatedAt\":\"2022-02-28T15:34:03Z\",\"registrationPlate\":\"GO-123-LF\",\"model\":\"Golf\",\"brand\":\"VolksWagen\",\"serialNumber\":\"VWVWVWVWVWVWVW\"}\n</code></pre>\n<h2>Mise a jour de véhicule</h2>\n<pre><code>~ curl --location --request PUT 'localhost:8080/admin/vehicle' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"id\": 20,\n    \"brand\": \"VolksWagen\",\n    \"model\": \"Golf SW\",\n    \"serialNumber\": \"VWVWVWVWVWVWVW\",\n    \"registrationPlate\": \"GO-123-LF\"\n}'\n{\"id\":20,\"createdAt\":\"2022-02-28T15:40:55Z\",\"updatedAt\":\"2022-02-28T15:40:55Z\",\"registrationPlate\":\"GO-123-LF\",\"model\":\"Golf SW\",\"brand\":\"VolksWagen\",\"serialNumber\":\"VWVWVWVWVWVWVW\"}\n</code></pre>\n<p>Vous pouvez retrouver le github du projet ici : <a href=\"https://dev.to/giboow/springboot-contextualizing-serialization-29mp\">https://dev.to/giboow/springboot-contextualizing-serialization-29mp</a></p>\n<p>Crédit photo : https://unsplash.com/photos/WVl1N2C2zEA</p>\n"},{"id":"comment-transcoder-une-video-avec-springboot-et-ffmpeg","author":"giboow","title":"Comment construire un transcodeur vidéo avec SpringBoot et FFMPEG !","date":"2021-10-12","keywords":["Video","Transcoder","SpringBoot","FFMpeg","Java"],"image":"/static/images/post/proxy-transcoder-ffmpeg/main.jpg","contentHtml":"<p>J'ai récemment commencé à travailler sur un système de caméras de surveillance et je souhaite pouvoir afficher les vidéos collectées sur des pages Web.\nÀ première vue, cela semblait très facile, mais je me suis vite rendu compte que je devais me creuser la tête!</p>\n<h1>Comment cela doit fonctionner?</h1>\n<p>La caméra est connectée à un NVR (Numeric Video recorder) qui possède une API permettant de récupérer les informations de configuration et le flux vidéo. En cherchant un peu sur le Web (Oui la documentation est difficile d'accès..), je découvre que le protocole de communication utilisé par le NVR est le RTSP (Real-Time Streaming Protocol). C'est là que je rencontre le principal problème ! Comment utiliser ce protocole dans une page HTML qui ne le supporte pas ? Ma solution est d'utiliser un serveur qui permet de transcoder la vidéo dans un format plus connu (MP4) et un protocole ultra standard (Http). Cela me permettra également de cacher les identifiants d'accès à la caméra en utilisant mon serveur comme un proxy.</p>\n<p><img src=\"https://giboow.fr/static/images/post/proxy-transcoder-ffmpeg/graph-ffmpeg-transcoder.png\" alt=\"Graph it should work\"></p>\n<h1>Alors comment on fait ça?</h1>\n<p>Un excellent outil bien connu pour faire de la conversion vidéo est <a href=\"https://www.ffmpeg.org/\">FFMPeg</a>, donc je commence à regarder comment je peux l'utiliser pour convertir RSTP. Je trouve rapidement une ligne de commande qui fonctionne :</p>\n<pre><code>ffmpeg -y -loglevel level+info -n -re -acodec pcm_s16le -rtsp_transport tcp -i rtsp://user:passwd@192.168.1.200:554/ISAPI/Streaming/channels/101/live -vcodec copy -af asetrate=22050 -acodec aac -b:a 96k -nostdin myvideo.mp4\n</code></pre>\n<p>Alors comment faire un proxy avec SpringBoot ? C'est très simple en fait, il suffit d'utiliser l'objet <a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/StreamingResponseBody.html\">StreamingResponseBody</a>. Cela permet de renvoyer un traitement asynchrone de la requête, où l'application peut écrire directement sur le flux de sortie de la réponse sans bloquer le reste de mon API.</p>\n<p>Enfin, il me suffit d'utiliser FFMPEG dans mon contrôleur pour envoyer le flux via mon API. J'aurais pu utiliser \" Runtime.getRuntime().exec(\" ffmpeg...) \" mais je n'arrivais pas à trouver comment obtenir mon flux. Heureusement, j'ai trouvé une bibliothèque magique <a href=\"https://github.com/kokorin/Jaffree\">Jaffree</a> : \"Jaffree stands for JAva FFmpeg and FFprobe FREE command line wrapper. Jaffree supports programmatic video production and consumption (with transparency)\"</p>\n<h1>La solution</h1>\n<p>Voici la solution finale et comment relayer un flux vidéo provenant d'une caméra HikVision afin que le format soit utilisable par une page HTML.</p>\n<pre><code>import com.github.kokorin.jaffree.StreamType;\nimport com.github.kokorin.jaffree.ffmpeg.FFmpeg;\nimport com.github.kokorin.jaffree.ffmpeg.PipeOutput;\n\n@RestController\n@RequestMapping(\"/video\")\n@Log4j2\npublic class VideoController {\n    @GetMapping(value = \"/live.mp4\")\n    @ResponseBody\n    public ResponseEntity&#x3C;StreamingResponseBody> livestream(@PathVariable(\"id\") Long tipperId) throws Exception {\n\n        String rtspUrl = \"rtsp://user:passwd@192.168.1.200:554/ISAPI/Streaming/channels/101/live\";\n\n        return ResponseEntity.ok()\n                .contentType(MediaType.APPLICATION_OCTET_STREAM)\n                .body(os -> {\n                    FFmpeg.atPath()\n                            .addArgument(\"-re\")\n                            .addArguments(\"-acodec\", \"pcm_s16le\")\n                            .addArguments(\"-rtsp_transport\", \"tcp\")\n                            .addArguments(\"-i\", $rtspUrl)\n                            .addArguments(\"-vcodec\", \"copy\")\n                            .addArguments(\"-af\", \"asetrate=22050\")\n                            .addArguments(\"-acodec\", \"aac\")\n                            .addArguments(\"-b:a\", \"96k\" )\n                            .addOutput(PipeOutput.pumpTo(os)\n                                    .disableStream(StreamType.AUDIO)\n                                    .disableStream(StreamType.SUBTITLE)\n                                    .disableStream(StreamType.DATA)\n                                    .setFrameCount(StreamType.VIDEO, 100L)\n                                     //1 frame every 10 seconds\n                                    .setFrameRate(0.1)\n                                    .setDuration(1, TimeUnit.HOURS)\n                                    .setFormat(\"ismv\"))\n                            .addArgument(\"-nostdin\")\n                            .execute();\n                });\n\n    }\n}\n</code></pre>\n<p>Vous devrez également modifier la configuration de votre application SpringBoot (fichier application.properties) pour augmenter le délai d'attente pour les requêtes asynchrones.</p>\n<pre><code>spring.mvc.async.request-timeout = 3600000\n</code></pre>\n<p>Il vous suffit d'appeler votre API sur la page web :</p>\n<pre><code>&#x3C;div class=\"video\">\n  &#x3C;video width=\"100%\" height=\"auto\" controls autoplay muted loop *ngIf=\"event?.video\">\n    &#x3C;source src=\"http://localhost:8080/video/live.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n  &#x3C;/video>\n&#x3C;/div>\n</code></pre>\n<p>Et voici le résultat :</p>\n<p><img src=\"https://giboow.fr/static/images/post/proxy-transcoder-ffmpeg/result-ffmpeg-transcoder.png\" alt=\"Final result\"></p>\n<p>Facile non?</p>\n<p><a href=\"https://dev.to/giboow/how-to-build-a-video-transcoder-with-springboot-and-ffmpeg-n7p\">Retrouvez l'article anglais sur dev.to</a></p>\n"},{"id":"android-emulator-apple-silicon","author":"giboow","title":"Android Emulator sur Apple Silicon, enfin une preview!","date":"2020-12-06","keywords":["Android","Android Emulator","Apple Silicon","AppleM1"],"image":"/static/images/post/android-apple.png","contentHtml":"<p>Bonsoir à tous!</p>\n<p>J'ai récemment craqué pour le nouveau MacBook Pro M1! Depuis 1 semaine que je l'apprivoise, toutes les applications\nque j'utilise fonctionnent (merci Rosetta2!). Mon seul problème, en tant que developpeur mobile, est que l'Emulateur\nAndroid ne fonctionne pas. C'est\nd'ailleurs le problème de toutes les applications qui font de la virtualisation (Docker, ParallelDesktop, etc …)!\nJe dois donc utiliser un téléphone physique, et cela m'empêche de tester mes applications sur différentes versions\nd'Android.</p>\n<p>Heureusement les ingénieurs de Google sont à fond sur le  coup et ont mis à disposition une version Preview de\nl'émulateur ici : <a href=\"https://androidstudio.googleblog.com/2020/12/android-emulator-apple-silicon-preview.html\">https://androidstudio.googleblog.com/2020/12/android-emulator-apple-silicon-preview.html</a></p>\n<p>Et ça fonctionne :</p>\n<p><img src=\"/static/images/post/capture_android_emulator_preview.png\" alt=\"Capture Android preview\"></p>\n<p>Pour autant tout n'est pas parfait :</p>\n<ul>\n<li>Les Webview ne fonctionnent pas</li>\n<li>Pas de son</li>\n<li>Pas de skin téléphone</li>\n<li>Les codecs vidéos ne sont pas fonctionnels</li>\n<li>Les applications ARM 32Bits ne sont pas compatibles</li>\n<li>Quelques bugs graphiques sur les applications utilisant l'API Vulkan</li>\n<li>Une popup apparait au démarrage de l'émulateur, indiquant qu'elle ne trouve pas ADB</li>\n</ul>\n<p>Tout est dit! Il ne reste plus qu'à tester 😃.</p>\n<p>Amusez-vous bien!</p>\n"},{"id":"comment-configurer-postgresql-avec-pgtune","author":"giboow","title":"Comment bien configurer son serveur Postgres avec PGTune","date":"2020-12-02","keywords":["Postgresql","Tunning","Performances"],"image":"/static/images/post/pgtune.png","contentHtml":"<p>Récemment, j'ai dû mettre le nez dans les serveurs de notre application, car nous avions des problèmes de performances\net de stabilité.</p>\n<p>Pour vous replanter le décor, l'application dont je m'occupe aujourd'hui est hébergé sur un serveur qui comprend un\nservice de base de données Postgres, un serveur d'application Java, ainsi que d'un serveur apache permettant aux\nutilisateurs de télécharger le front. Tout ça fonctionne sur le même serveur sans conteneurs. N'ayant pas installé ces\nservices moi-même, j'ai dû passer un peu de temps pour comprendre pourquoi notre serveur plantait lors de fortes\ncharges... Puis je me suis aperçu grâce à notre système de monitoring que la mémoire du serveur Postgres n'était même\npas limitée...</p>\n<p>Je n'ai aucune connaissance sur les configurations des services Postgres, et comme je n'aime pas trop perdre de temps à\néplucher les documentations, j'ai fouillé un peu sur la toile. C'est là que j'ai découvert le travail\nde <a href=\"https://github.com/le0pard\">Alexey Vasiliev (@leOpard)</a> qui propose un générateur de configuration\nPostgres : <a href=\"https://pgtune.leopard.in.ua/#/\">PGTune</a></p>\n<p>Il suffit de paramétrer votre configuration en fonction des ressources que vous voulez allouer sur le serveur! Et PAF ça\nfait le ☕!</p>\n<p><img src=\"/static/images/post/capture-pgtune.png\" alt=\"PGTune capture\"></p>\n<p>Il ne vous reste plus qu'à injecter cette nouvelle configuration dans le fichier de configuration de votre Postgres.</p>\n<p>Depuis que j'ai appliqué la configuration par l'utilitaire, je n'ai plus de problème de performance. Finalement, les utilisateurs sont\ncontents, et moi aussi 😃.</p>\n<p>Pour les fans de <a href=\"https://www.ruby-lang.org/fr/\">Ruby</a>, où si cela vous amuse, vous pouvez aller consulter le code du\ngénérateur de @leOpard, les sources sont disponibles sur\nGithub : <a href=\"https://github.com/le0pard/pgtune\">https://github.com/le0pard/pgtune</a></p>\n"},{"id":"giboow-le-blog","author":"giboow","title":"Giboow, le Blog!","date":"2020-11-25","keywords":["Blog","TheBeginning","Objectifs"],"image":"/static/images/post/hello-image.webp","contentHtml":"<p>Je m'appelle Philippe, j'ai 36 ans, j'ai une petite famille ainsi qu'un chat et deux poules!\nJe suis développeur d'application depuis une bonne quinzaine d'années. Le développement et la technologie occupent donc\nune bonne partie de mes journées !</p>\n<p>J'ai toujours aimé la programmation et la logique qui en découle. J'ai commencé ma carrière au collège en 4e, lorsque\nmon grand frère m'a offert une calculatrice Casio graphique, depuis ce jour là j'ai découvert les bases de la\nprogrammation ! À 13 ans, nous avons reçu notre premier ordinateur, c'était un Apple Performa 6320, au bout d’un mois\nnous avons démonté la bête avec mon frère pour voir comment cela fonctionnait !\nJ'ai ensuite continué mon évolution tranquillement avec des pages HTML statiques, des Apple script, etc...</p>\n<p>Pendant mes\nétudes j'ai beaucoup travaillé sur Linux j'ai donc une bonne connaissance de ce système et de son fonctionnement, je ne\nsuis cependant pas un expert (mais je me débrouille toujours 😃).</p>\n<p>En 2009, j'ai commencé ma carrière professionnelle. J'ai toujours voulu naviguer sur différents projets, apprendre de\nnouvelles choses. Je déteste le fait d'être considéré comme un expert dans une technologie précise. J'aime apprendre de\nnouvelles choses, maitriser l'ensemble de mes projets, et de partager mes connaissances avec mes amis, mes collègues,\nvous !</p>\n<p>Sur ce blog conçut et réaliser avec ♥, je vais essayer de vous partager mon quotidien (du code, du code, du code!!),\nmais aussi tout ce que je trouve intéressant sur la toile et relatif a mon métier (application, librairies, hardware,\nnews, etc.) !</p>\n<p>Ce site va être aussi pour moi, un bon moyen pour (re)découvrir ReactJs ainsi que NextJs. J'ai en effet eu l'occasion de\nmanipuler ces deux frameworks, mais sans jamais proposer une version disponible publiquement.</p>\n"}]},"__N_SSG":true}